import React from 'react';

interface AgendaPreviewProps {
  agendaContent: string;
  meetingData: any;
}

export function AgendaPreview({ agendaContent, meetingData }: AgendaPreviewProps) {
  // Format date and time
  const formattedDate = meetingData.startTime 
    ? new Date(meetingData.startTime).toLocaleDateString('en-US', {
        weekday: 'long',
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      }) 
    : 'TBD';
    
  const formattedTime = meetingData.startTime 
    ? new Date(meetingData.startTime).toLocaleTimeString('en-US', {
        hour: 'numeric',
        minute: '2-digit',
        hour12: true
      }) 
    : 'TBD';
    
  const meetingType = meetingData.type === 'online' ? 'Online Meeting' : 'In-Person Meeting';

  return (
    <div className="relative max-w-3xl mx-auto glass-effect dark:bg-card/90 rounded-xl overflow-hidden premium-shadow-elevated dark:premium-shadow-elevated border border-border">
      {/* Header */}
      <div className="bg-gradient-to-r from-primary to-primary/90 text-primary-foreground p-6 text-center">
        <h1 className="text-2xl font-serif font-semibold tracking-tight m-0 leading-tight">
          {meetingData.title}
        </h1>
        <p className="mt-2 opacity-90 text-sm font-medium">
          Meeting Agenda & Information
        </p>
      </div>

      {/* Meeting Details */}
      <div className="bg-muted/50 dark:bg-muted/20 p-6 m-6 rounded-lg border-l-4 border-primary shadow-sm">
        <h2 className="m-0 mb-4 text-primary text-lg flex items-center font-serif">
          <span className="mr-2">ðŸ“…</span> Meeting Details
        </h2>
        
        <div className="space-y-3">
          {[
            { label: "Date", value: formattedDate },
            { label: "Time", value: formattedTime },
            { label: "Type", value: meetingType },
            meetingData.meetingLink && { 
              label: "Meeting Link", 
              value: <a href={meetingData.meetingLink} className="text-primary no-underline font-medium hover:underline">
                {meetingData.meetingLink}
              </a> 
            }
          ].filter(Boolean).map((item, index) => (
            <p key={index} className="my-2.5 text-foreground stagger-item">
              <strong>{item.label}:</strong> {item.value}
            </p>
          ))}
        </div>
      </div>

      {/* Decorative divider */}
      <div className="relative py-3 px-6">
        <div className="absolute inset-0 flex items-center">
          <div className="w-full border-t border-border"></div>
        </div>
        <div className="relative flex justify-center">
          <span className="bg-card px-4 text-sm text-muted-foreground font-medium">Agenda Details</span>
        </div>
      </div>

      {/* Agenda Content */}
      <div className="p-6 px-8 bg-card leading-relaxed text-card-foreground prose prose-sm max-w-none prose-headings:font-serif prose-headings:text-primary prose-a:text-primary hover:prose-a:text-primary/80 prose-strong:text-primary/90 dark:prose-invert">
        <div dangerouslySetInnerHTML={{ __html: agendaContent }} />
      </div>

      {/* CTA Section */}
      <div className="text-center p-7 border-t border-border bg-muted/30 dark:bg-muted/10">
        {meetingData.type === 'online' && meetingData.meetingLink ? (
          <div>
            <a 
              href={meetingData.meetingLink} 
              className="inline-block muted-gradient-primary text-primary-foreground no-underline py-3.5 px-7 rounded-lg font-semibold text-base premium-shadow-subtle mb-4 hover-lift-subtle hover-glow transition-all"
            >
              ðŸš€ Join Meeting Now
            </a>
            <p className="mt-4 text-muted-foreground text-sm">
              Or copy this link: <a href={meetingData.meetingLink} className="text-primary font-medium hover:underline">
                {meetingData.meetingLink}
              </a>
            </p>
          </div>
        ) : (
          <p className="text-muted-foreground italic py-2">
            Please review the agenda above and come prepared for the discussion.
          </p>
        )}
      </div>

      {/* Footer */}
      <div className="bg-muted/50 dark:bg-muted/20 p-5 text-center text-sm text-muted-foreground border-t border-border">
        <p className="m-0">
          This meeting invitation was generated by GoogleCalSync
        </p>
        <p className="mt-2 mb-0">
          For support, contact the meeting organizer
        </p>
      </div>
      
      {/* Subtle branded watermark */}
      <div className="absolute bottom-4 right-4 opacity-10">
        <svg width="40" height="40" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-13h2v6h-2zm0 8h2v2h-2z" fill="currentColor"/>
        </svg>
      </div>
    </div>
  );
}