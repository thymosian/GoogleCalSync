@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&family=Crimson+Pro:wght@400;500;600;700&family=Space+Grotesk:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500;600&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE - Muted and Serious Theme */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 220 15% 97%;
  --foreground: 215 25% 27%;

  --border: 220 13% 89%;

  --card: 0 0% 98%;
  --card-foreground: 215 25% 27%;
  --card-border: 220 13% 87%;

  --sidebar: 220 14% 94%;
  --sidebar-foreground: 215 25% 27%;
  --sidebar-border: 220 13% 87%;

  --sidebar-primary: 215 28% 17%;
  --sidebar-primary-foreground: 210 40% 98%;

  --sidebar-accent: 160 25% 55%;
  --sidebar-accent-foreground: 0 0% 98%;

  --sidebar-ring: 215 28% 17%;

  --popover: 0 0% 98%;
  --popover-foreground: 215 25% 27%;
  --popover-border: 220 13% 87%;

  --primary: 215 28% 17%;
  --primary-foreground: 210 40% 98%;

  --secondary: 220 14% 92%;
  --secondary-foreground: 215 25% 27%;

  --muted: 220 14% 94%;
  --muted-foreground: 215 16% 47%;

  --accent: 220 14% 90%;
  --accent-foreground: 215 25% 27%;

  --destructive: 0 50% 48%;
  --destructive-foreground: 210 40% 98%;

  --input: 220 13% 91%;
  --ring: 219 94% 19%;
  --chart-1: 219 94% 19%;
  --chart-2: 142 76% 36%;
  --chart-3: 287 94% 53%;
  --chart-4: 24 94% 53%;
  --chart-5: 197 94% 53%;

  --font-sans: Inter, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(220 13% 91% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(220 13% 91% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(220 13% 91% / 0.00), 0px 1px 2px -1px hsl(220 13% 91% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(220 13% 91% / 0.00), 0px 1px 2px -1px hsl(220 13% 91% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(220 13% 91% / 0.00), 0px 2px 4px -1px hsl(220 13% 91% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(220 13% 91% / 0.00), 0px 4px 6px -1px hsl(220 13% 91% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(220 13% 91% / 0.00), 0px 8px 10px -1px hsl(220 13% 91% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(220 13% 91% / 0.00);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 215 30% 9%;
  --foreground: 210 30% 92%;

  --border: 217 25% 15%;

  --card: 215 28% 12%;
  --card-foreground: 210 30% 92%;
  --card-border: 217 25% 15%;

  --sidebar: 220 35% 11%;
  --sidebar-foreground: 210 30% 92%;
  --sidebar-border: 217 25% 15%;

  --sidebar-primary: 210 30% 78%;
  --sidebar-primary-foreground: 215 30% 9%;

  --sidebar-accent: 160 25% 55%;
  --sidebar-accent-foreground: 215 30% 9%;

  --sidebar-ring: 210 30% 78%;

  --popover: 215 28% 12%;
  --popover-foreground: 210 30% 92%;
  --popover-border: 217 25% 15%;

  --primary: 210 30% 78%;
  --primary-foreground: 215 30% 9%;

  --secondary: 217 25% 18%;
  --secondary-foreground: 210 30% 92%;

  --muted: 217 25% 15%;
  --muted-foreground: 215 15% 65%;

  --accent: 217 25% 18%;
  --accent-foreground: 210 30% 92%;

  --destructive: 0 50% 58%;
  --destructive-foreground: 210 30% 92%;

  --input: 217 32% 17%;
  --ring: 219 91% 85%;
  --chart-1: 219 91% 85%;
  --chart-2: 142 69% 70%;
  --chart-3: 287 85% 75%;
  --chart-4: 24 85% 75%;
  --chart-5: 197 85% 75%;

  --shadow-2xs: 0px 2px 0px 0px hsl(217 32% 17% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(217 32% 17% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(217 32% 17% / 0.00), 0px 1px 2px -1px hsl(217 32% 17% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(217 32% 17% / 0.00), 0px 1px 2px -1px hsl(217 32% 17% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(217 32% 17% / 0.00), 0px 2px 4px -1px hsl(217 32% 17% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(217 32% 17% / 0.00), 0px 4px 6px -1px hsl(217 32% 17% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(217 32% 17% / 0.00), 0px 8px 10px -1px hsl(217 32% 17% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(217 32% 17% / 0.00);

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}

/* Premium animations and effects - Enhanced for sophistication */
.glass-effect {
 background: hsl(var(--card) / 0.7);
 backdrop-filter: blur(16px) saturate(180%);
 border: 1px solid hsl(var(--border) / 0.5);
 box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
}

.dark .glass-effect {
 background: hsl(var(--card) / 0.8);
 border: 1px solid hsl(var(--border) / 0.6);
 box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

.muted-gradient-primary {
 background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary) / 0.85) 100%);
}

.muted-gradient-accent {
 background: linear-gradient(135deg, hsl(var(--accent)) 0%, hsl(var(--accent) / 0.85) 100%);
}

.dark .muted-gradient-primary {
 background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary) / 0.9) 100%);
}

.premium-shadow-subtle {
 box-shadow: 0 4px 20px -2px rgba(0, 0, 0, 0.08), 0 2px 8px -2px rgba(0, 0, 0, 0.04);
}

.dark .premium-shadow-subtle {
 box-shadow: 0 4px 20px -2px rgba(0, 0, 0, 0.25), 0 2px 8px -2px rgba(0, 0, 0, 0.15);
}

.premium-shadow-elevated {
 box-shadow: 0 12px 40px -4px rgba(0, 0, 0, 0.12), 0 4px 16px -4px rgba(0, 0, 0, 0.08);
}

.dark .premium-shadow-elevated {
 box-shadow: 0 12px 40px -4px rgba(0, 0, 0, 0.4), 0 4px 16px -4px rgba(0, 0, 0, 0.25);
}

/* Sophisticated hover effects */
.hover-lift-subtle {
 transition: all 0.4s cubic-bezier(0.4, 0.0, 0.2, 1);
 transform: translateZ(0);
}

.hover-lift-subtle:hover {
 transform: translateY(-3px) scale(1.02);
 box-shadow: 0 16px 48px -8px rgba(0, 0, 0, 0.15);
}

.dark .hover-lift-subtle:hover {
 box-shadow: 0 16px 48px -8px rgba(0, 0, 0, 0.4);
}

.hover-glow {
 transition: all 0.3s ease;
 position: relative;
}

.hover-glow:hover {
 box-shadow: 0 0 30px hsl(var(--primary) / 0.25);
}

.dark .hover-glow:hover {
 box-shadow: 0 0 30px hsl(var(--primary) / 0.35);
}

/* Stagger animations for lists - more sophisticated */
.stagger-item {
 animation: sophisticatedFadeIn 0.8s cubic-bezier(0.4, 0.0, 0.2, 1) forwards;
 opacity: 0;
 transform: translateY(20px);
}

.stagger-item:nth-child(1) { animation-delay: 0.1s; }
.stagger-item:nth-child(2) { animation-delay: 0.2s; }
.stagger-item:nth-child(3) { animation-delay: 0.3s; }
.stagger-item:nth-child(4) { animation-delay: 0.4s; }
.stagger-item:nth-child(5) { animation-delay: 0.5s; }
.stagger-item:nth-child(6) { animation-delay: 0.6s; }
.stagger-item:nth-child(7) { animation-delay: 0.7s; }

/* Enhanced keyframes */
@keyframes sophisticatedFadeIn {
 0% {
   opacity: 0;
   transform: translateY(30px) scale(0.95);
 }
 50% {
   opacity: 0.7;
   transform: translateY(-2px) scale(1.01);
 }
 100% {
   opacity: 1;
   transform: translateY(0) scale(1);
 }
}

@keyframes subtlePulse {
 0%, 100% {
   opacity: 1;
 }
 50% {
   opacity: 0.7;
 }
}

@keyframes gentleSlideIn {
 from {
   opacity: 0;
   transform: translateX(-20px);
 }
 to {
   opacity: 1;
   transform: translateX(0);
 }
}

/* Font Classes */
.font-display {
  font-family: 'Space Grotesk', system-ui, -apple-system, sans-serif;
}

.font-serif {
  font-family: 'Crimson Pro', serif;
}

.font-sans {
  font-family: 'Inter', system-ui, -apple-system, sans-serif;
}

.font-mono {
  font-family: 'JetBrains Mono', 'Fira Code', monospace;
}

/* AI Panel drop-up animation */
@keyframes slideUpFromBottom {
 from {
   opacity: 0;
   transform: translateY(100%) scale(0.95);
 }
 to {
   opacity: 1;
   transform: translateY(0) scale(1);
 }
}

.ai-panel-enter {
 animation: slideUpFromBottom 0.4s cubic-bezier(0.4, 0.0, 0.2, 1) forwards;
}

/* Smooth card transitions */
.card-transition {
 transition: all 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
}

.card-transition:hover {
 transform: translateY(-2px);
 box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
}

.dark .card-transition:hover {
 box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

/* Sidebar toggle animations */
.sidebar-enter {
 animation: gentleSlideIn 0.3s cubic-bezier(0.4, 0.0, 0.2, 1) forwards;
}

/* Button bounce effect */
.btn-bounce {
 transition: transform 0.2s ease;
}

.btn-bounce:active {
 transform: scale(0.95);
}

/* Loading shimmer effect */
.shimmer {
 background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
 animation: shimmer 2s infinite;
}

.dark .shimmer {
 background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
}

@keyframes shimmer {
 0% { transform: translateX(-100%); }
 100% { transform: translateX(100%); }
}